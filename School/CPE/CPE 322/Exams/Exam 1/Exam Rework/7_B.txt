module SevenB(input T, CLK, output Z)begin
reg [1:0] state;
parameter S0 = 2'd0, S1 = 2'd1, S2 = 2'd2, S3 = 2'd3;

always @(posedge CLK) 
begin
	case(state)
		S0: 
            if(T) begin
				state = S0;
				Z = 2'b01;
			else
				state = S1;
				Z = 2b'01;
			end    
		S1: 
            if(T) begin
				state = S0;
				Z = 2'b01;
			else
				state = S2;
				Z = 2b'01;
			end    	
		S2: 
            if(T) begin
				state = S3;
				Z = 2'b00;
			else
				state = S2;
				Z = 2b'00;
			end    
		S3: 
            if(T) begin
				state = S0;
				Z = 2'b00;
			else
				state = S2;
				Z = 2b'00;
			end    
	endcase   
end

endmodule

