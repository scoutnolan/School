


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         
    4 00000000                 AREA             problem_3136, CODE, READWRITE
    5 00000000                 ENTRY
    6 00000000 E28F0038        ADR              r0, arrayx  ; pointer to first 
                                                            element of array x
    7 00000004 E28F105C        ADR              r1, arrayy  ; pointer to first 
                                                            element of array y
    8 00000008 E59F2028        LDR              r2, size    ; r2 holds size of 
                                                            array
    9 0000000C E59F307C        LDR              r3, i       ; r3 holds loop cou
                                                            nter
   10 00000010 E59F5024        LDR              r5, a       ; r5 holds a
   11 00000014 E0534002 
                       loop    SUBS             r4, r3, r2  ; computes i - size
                                                            
   12 00000018 5A000005        BPL              done        ; if i - size >= 0,
                                                             done
   13 0000001C E7124003        LDR              r4, [r2, -r3] ; r4 = arrayx[siz
                                                            e-i]
   14 00000020 E0844005        ADD              r4, r4, r5  ; r4 = arrayx[size-
                                                            i] + a (i.e. 20)   
                                                            STR  r4, [r1]     ;
                                                             arrayy = arrayx[si
                                                            ze-i] + a
   15 00000024 E2800004        ADD              r0, r0, #4  ; update r0 for nex
                                                            t element of arrayx
                                                            
   16 00000028 E2811004        ADD              r1, r1, #4  ; update r1 for nex
                                                            t element of arrayy
                                                            
   17 0000002C E2833001        ADD              r3, r3, #1  ; increments loop c
                                                            ounter
   18 00000030 EAFFFFF7        B                loop        ; once done with it
                                                            eration, go back
   19 00000034 EAFFFFFE 
                       done    B                done        ; infinite loop
   20 00000038 0000000A 
                       size    DCD              10          ; set size to 10
   21 0000003C 00000014 
                       a       DCD              20          ; set a to 20
   22 00000040 00000008 
              00000002 
              00000009 
              00000006 
              00000007 
              00000000 
              00000001 
              00000003 
              00000005 
              00000004 arrayx  DCD              8, 2, 9, 6, 7, 0, 1, 3, 5, 4 ; 
                                                            initialize array x
   23 00000068 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 2 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       arrayy  SPACE            40          ; reserver memory l
                                                            ocations for array 
                                                            y
   24 00000090 00000000 
                       i       DCD              0           ; set i initially t
                                                            o 0
   25 00000094                 END
Command Line: --debug --xref --diag_suppress=9931 --bi --apcs=interwork --depen
d=.\objects\problem_3136.d -o.\objects\problem_3136.o -ID:\Keil_v5\ARM\RV31\INC
 -ID:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVIS
ION_VERSION SETA 529" --list=.\listings\problem_3136.lst problem_3136.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

a 0000003C

Symbol: a
   Definitions
      At line 21 in file problem_3136.s
   Uses
      At line 10 in file problem_3136.s
Comment: a used once
arrayx 00000040

Symbol: arrayx
   Definitions
      At line 22 in file problem_3136.s
   Uses
      At line 6 in file problem_3136.s
Comment: arrayx used once
arrayy 00000068

Symbol: arrayy
   Definitions
      At line 23 in file problem_3136.s
   Uses
      At line 7 in file problem_3136.s
Comment: arrayy used once
done 00000034

Symbol: done
   Definitions
      At line 19 in file problem_3136.s
   Uses
      At line 12 in file problem_3136.s
      At line 19 in file problem_3136.s

i 00000090

Symbol: i
   Definitions
      At line 24 in file problem_3136.s
   Uses
      At line 9 in file problem_3136.s
Comment: i used once
loop 00000014

Symbol: loop
   Definitions
      At line 11 in file problem_3136.s
   Uses
      At line 18 in file problem_3136.s
Comment: loop used once
problem_3136 00000000

Symbol: problem_3136
   Definitions
      At line 4 in file problem_3136.s
   Uses
      None
Comment: problem_3136 unused
size 00000038




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: size
   Definitions
      At line 20 in file problem_3136.s
   Uses
      At line 8 in file problem_3136.s
Comment: size used once
8 symbols
340 symbols in table
