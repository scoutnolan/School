module FinalProject(key,sw,clock50M,HEX,d,led);
	input [1:0]key;
	input [9:0]sw;
	input clock50M;
	output [41:0]HEX;
	output d;
	output [9:0]led;
	
	wire clock1k, clock100, clock10, clock1, clock01, clock001, clockn, A1, A2, A, b;
	wire [23:0]hs1;
	wire [23:0]hs2;
	wire [9:0]LED1;
	wire [9:0]LED2;
	wire [23:0]hs;
	wire [23:0]o;
	wire [23:0]C;
	wire R3, R4;
	reg R1, R2, R;
	
	clock_div U0(clock50M,clock1k);
	Game1 T1(~sw[9],key[0],o[23:0],clock50M,clock1k,hs1[23:0],A1,b,LED1[9:0]);
	Game2 T2(sw[9],~key[1],o[23:0],sw[7:0],clock50M,clock1k,hs2[23:0],A2,LED2[9:0]);
	StateMachineR S2(sw[9],clock1k,R3);
	StateMachineR S3(~sw[9],clock1k,R4);
	CountTimer C0(R,A,clock1k,clock100,o[3:0]);
	CountTimer C1(R,A,clock100,clock10,o[7:4]);
	CountTimer C2(R,A,clock10,clock1,o[11:8]);
	CountTimer C3(R,A,clock1,clock01,o[15:12]);
	CountTimer C4(R,A,clock01,clock001,o[19:16]);
	CountTimer C5(R,A,clock001,clockn,o[23:20]);
	MUX M0(o[3:0],hs[3:0],sw[8],C[3:0]);
	MUX M1(o[7:4],hs[7:4],sw[8],C[7:4]);
	MUX M2(o[11:8],hs[11:8],sw[8],C[11:8]);
	MUX M3(o[15:12],hs[15:12],sw[8],C[15:12]);
	MUX M4(o[19:16],hs[19:16],sw[8],C[19:16]);
	MUX M5(o[23:20],hs[23:20],sw[8],C[23:20]);
	MUX24 M6(hs1[23:0],hs2[23:0],sw[9],hs[23:0]);
	HEXDecoder D0(C[3:0],HEX[6:0]);			// Hex 0
	HEXDecoder D1(C[7:4],HEX[13:7]);		// Hex 1
	HEXDecoder D2(C[11:8],HEX[20:14]);		// Hex 2
	HEXDecoder D3(C[15:12],HEX[27:21]);	// Hex 3
	HEXDecoder D4(C[19:16],HEX[34:28]);	// Hex 4
	HEXDecoder D5(C[23:20],HEX[41:35]);	// Hex 5
	
	assign A = A1 | A2;
	assign led[9] = LED1[9] | LED2[9];
	assign led[8] = LED1[8] | LED2[8];
	assign led[7] = LED1[7] | LED2[7];
	assign led[6] = LED1[6] | LED2[6];
	assign led[5] = LED1[5] | LED2[5];
	assign led[4] = LED1[4] | LED2[4];
	assign led[3] = LED1[3] | LED2[3];
	assign led[2] = LED1[2] | LED2[2];
	assign led[1] = LED1[1] | LED2[1];
	assign led[0] = LED1[0] | LED2[0];

	always@(posedge clock50M) begin
		R1 = ~b & ~key[0] & ~sw[9];
		R2 = ~A2 & ~key[1] & sw[9];
		R = R1 | R2 | R3 | R4;
	end
	
	assign d = 0;

endmodule 