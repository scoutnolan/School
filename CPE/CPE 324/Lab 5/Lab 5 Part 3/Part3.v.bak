

module Part3(A,B,Clock,Reset,Enable,S);
	input A,B;
	input Reset,Enable;
	input Clock;
	output reg S;

	reg [1:0] state = 0;
	reg [1:0] next_state = 0;

	always @( A,B,state)begin
		case(state)
			0 : begin    S = 0;
				if (A == 0 && B == 0) begin next_state = 0; end
				else if (A ==1 && B == 1) begin next_state = 2; end
				else begin next_state = 1; end
			    end
			1 : begin S = 1;
				if (A == 0 && B == 0) begin next_state = 0; end
				else if (A ==1 && B == 1) begin next_state = 2; end
				else begin next_state = 1; end
			    end
			2 : begin S = 0;
				if (A == 0 && B == 0) begin next_state = 1; end
				else if (A ==1 && B == 1) begin next_state = 3; end
				else begin next_state = 2; end
			    end
			3 : begin S = 1;
				if (A == 0 && B == 0) begin next_state = 1; end
				else if (A ==1 && B == 1) begin next_state = 3; end
				else begin next_state = 2; end
			    end
			endcase
		
	end

	always @(posedge Clock)begin
	  
		if (Reset)begin
			state = 0;
		end
		else begin
			if (Enable) begin state = next_state; end
		end
	 end


endmodule